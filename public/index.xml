<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Salman Ali Banani</title>
    <link>https://salmanalibanani.netlify.app/</link>
    <description>Recent content on Salman Ali Banani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2020 Salman Ali Banani.</copyright>
    <lastBuildDate>Thu, 16 Jul 2020 16:15:44 +1000</lastBuildDate>
    
	<atom:link href="https://salmanalibanani.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Archives</title>
      <link>https://salmanalibanani.netlify.app/2020/07/16/archives/</link>
      <pubDate>Thu, 16 Jul 2020 16:15:44 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/07/16/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Philosophy for Software Developers</title>
      <link>https://salmanalibanani.netlify.app/2020/07/10/philosophy-for-software-developers/</link>
      <pubDate>Fri, 10 Jul 2020 11:16:15 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/07/10/philosophy-for-software-developers/</guid>
      <description>Software developers should read philosophy.
These days philosophy is considered pretty much useless. If you look at the website of philosophy department of any university, you’ll see that they desperately try to convince you that studying for a degree in philosophy will give you some marketable skills that will ensure better job prospects. And that desperation in itself is perhaps an indicator of how useless qualifications in philosophy as a field of study have become.</description>
    </item>
    
    <item>
      <title>Storing Secrets in Azure Key Vault from Azure Devops Release Pipeline</title>
      <link>https://salmanalibanani.netlify.app/2020/07/09/storing-secrets-in-azure-key-vault-from-azure-devops-release-pipeline/</link>
      <pubDate>Thu, 09 Jul 2020 00:32:31 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/07/09/storing-secrets-in-azure-key-vault-from-azure-devops-release-pipeline/</guid>
      <description>Azure Key Vault is a service that you can use to store application secrets and keys. You can store tokens, connection strings, certificates, API keys etc. in a Key Vault, and it provides a secured location with all usual safegaurds (encryption, access control etc.) that you would expect from such a solution. You would also expect that such solution should be easy to integrate with your build/release pipelines. Azure Key Vault turns out to be an obvious option if Azure happens to be your platform of choice.</description>
    </item>
    
    <item>
      <title>Scrum and Empiricism</title>
      <link>https://salmanalibanani.netlify.app/2020/06/26/scrum-and-empiricism/</link>
      <pubDate>Fri, 26 Jun 2020 11:16:15 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/06/26/scrum-and-empiricism/</guid>
      <description>“Scrum is founded on empirical process control theory, or empiricism.”
What? Empiricism?
The first time I read this sentence in the Scrum Guide, I was quite impressed. As a self-professed pseudo-philosopher, I had a vague understanding of philosophical questions on which empiricists and rationalists generally disagree with each other. It’s an ongoing argument in the history of human thought. To confuse the matters further, technically you can be a rationalist in one area (say mathematics) and an empiricist in another area of physical sciences.</description>
    </item>
    
    <item>
      <title>It&#39;s Not Just the Bell Curve</title>
      <link>https://salmanalibanani.netlify.app/2020/05/06/its-not-just-the-bell-curve/</link>
      <pubDate>Wed, 06 May 2020 11:16:15 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/05/06/its-not-just-the-bell-curve/</guid>
      <description>The Bell Curve is our friend. In a recent post, I argued that in Scrum teams the story point estimates work very well because we will inevitably overestimate effort required for certain stories and underestimate effort for others. The net effect is that the overestimates will cancel out the underestimates in the long run.
But, there is something else that goes on in a Scrum team, that makes our estimates more accurate.</description>
    </item>
    
    <item>
      <title>Story Points - A Mathematical Perspective</title>
      <link>https://salmanalibanani.netlify.app/2020/03/28/story-points-a-mathematical-perspective/</link>
      <pubDate>Sat, 28 Mar 2020 11:16:15 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/03/28/story-points-a-mathematical-perspective/</guid>
      <description>In sprint planning meetings, The Development Team works to forecast the functionality that will be developed during the Sprint. This often involves estimating the effort required to complete work on user stories. Story points are an abstract measure of the effort required to complete a story, and it’s fascinating to me how a set of educated guesses turns out to be a fairly accurate estimate of the effort required to meet sprint goals.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://salmanalibanani.netlify.app/2020/02/01/about/</link>
      <pubDate>Sat, 01 Feb 2020 11:16:15 +1000</pubDate>
      
      <guid>https://salmanalibanani.netlify.app/2020/02/01/about/</guid>
      <description>I am a Senior Consultant at Telstra Purple, one of the top IT consulting firms in Australia. I specialize in web development using ASP.NET MVC, JavaScript, HTML, CSS etc.
I live in Sydney, Australia with my family.</description>
    </item>
    
  </channel>
</rss>